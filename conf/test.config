// Define the list of blood cell names
params.bloodCells = ["lymph","mcv","hct","hgb","plt","neu", "mono","mpv",
    "mchc", "baso", "mch", "wbc", "rbc", "rdw", "eos", "HbA1c"]

//params.bloodCells = ["eGFR_crea"]
  
// Define the path to the directory containing the phenotype files
params.basePath = "/well/todd/projects/for_ruth/PRS/all_blood_traits_prs_scores"

// List to store phenotype paths
def pheno_list = []

// Iterate over each blood cell
params.bloodCells.each { cell ->
    // Path to the PRS ids file for the current blood cell
    def prs_ids = "${params.basePath}/${cell}_PGS_score_ids.txt"
    
    // Read the PRS ids file and generate phenotype paths
    new File(prs_ids).eachLine { line ->
        // Concatenate the constant path with the blood cell name and the phenotype file name
        def phenotype_path = ["${cell}", line.trim()]
        // def phenotype_path = ["${cell}", line.trim(), "${params.basePath}/${cell}_pheno.tsv"]
        pheno_list.add(phenotype_path) }
}

params{

    pheno = pheno_list

    ref19 = "/well/todd/projects/for_ruth/PRS/dbSNP/hg37_snp_info_header.txt"
    ref38 = "/well/todd/projects/for_ruth/PRS/dbSNP/hg38_snp_info_header.txt"
    
    chain_hg19_to_hg38 = "/well/todd/projects/for_ruth/PRS/Chain_files/hg19ToHg38.over.chain.gz" 
    chain_hg38_to_hg19 = "/well/todd/projects/for_ruth/PRS/Chain_files/hg38ToHg19.over.chain.gz"
    
    target_genome_build = 'hg19'

    plink_file = [
        ['UKB', '/well/todd/projects/for_ruth/PRS/ukb_Afr_imp_v3.bed',
        '/well/todd/projects/for_ruth/PRS/ukb_Afr_imp_v3.bim',
         '/well/todd/projects/for_ruth/PRS/ukb_Afr_imp_v3.fam'],
    ]

    plink_file_ukb = [
        ['UGRC', '/well/todd/projects/for_ruth/uganda_data/uganda.bed',
        '/well/todd/projects/for_ruth/uganda_data/uganda.bim',
        '/well/todd/projects/for_ruth/uganda_data/uganda.fam'],
    ]   
}
